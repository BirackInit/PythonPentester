Ce script a pour objectif de découvrir les hôtes actifs sur un réseau local en utilisant des requêtes ARP.

Expliquons le code ligne par ligne : 

    Importation des bibliothèques : 

    python 

import sys
from scapy.all import *

    sys: Bibliothèque pour interagir avec le système d'exploitation. 
    scapy.all: Scapy est une bibliothèque Python utilisée pour créer, envoyer, capturer et analyser des paquets réseau.

Vérification des arguments en ligne de commande : 

python 

if len(sys.argv) != 2:
    print("Utilisation : Python ARPScanner.py 192.168.11.129/24")
    sys.exit(1)

    Vérifie si le nombre d'arguments passés en ligne de commande est égal à 2. Si ce n'est pas le cas, le script affiche un message d'utilisation et se termine avec un code d'erreur.

Exécution du scanner ARP : 

python 

    try:
        alive, dead = srp(Ether(dst="ff:ff:ff:ff:ff:ff")/ARP(pdst=sys.argv[1]), timeout=2, verbose=0)
        print("Adresse MAC - Adresse IP")
        for i in range(0, len(alive)):
            print(alive[i][1].hwsrc + "__" + alive[i][1].psrc)
    except:
        pass

        La fonction  srp de Scapy est utilisée pour envoyer et recevoir des paquets ARP. 
        Ether(dst="ff:ff:ff:ff:ff:ff"): Spécifie l'adresse MAC de destination comme une diffusion générale (broadcast). 
        ARP(pdst=sys.argv[1]): Spécifie l'adresse IP de destination en utilisant l'argument de ligne de commande.
        timeout=2: Définit le temps d'attente pour la réception des réponses à 2 secondes.
        verbose=0: Désactive la sortie verbose lors de l'exécution. 

    En cas de succès, les adresses IP et MAC des hôtes actifs sont imprimées d for.

    L'utilisation du bloc  try et  except permet de gérer les erreurs sans provoquer une sortie du programme. 

En résumé, ce script effectue un balayage ARP sur le réseau spécifié, identifie les hôtes actifs et affiche leurs adresses IP et MAC. Assurez-vous que Scapy est installé (pip install scapy) avant d'exécuter ce script.