Ce script est un exemple simple d'un client TCP en Python. Voici une explication ligne par ligne : 

    Importation du module socket : 

    python 

import socket

    Le module  socket est nécessaire pour la communication réseau. 

Définition de l'adresse IP et du port du serveur : 

python 

server_ip = "192.168.91.131"
server_port = 8091

    server_ip: Adresse IP du serveur auquel le client se connectera. 
    server_port: Port du serveur auquel le client se connectera. 

Création du socket client : 

python 

client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    Crée un objet de socket pour la communication TCP ( SOCK_STREAM) avec la famille d'adresses IPv4 ( AF_INET). 

Tentative de connexion au serveur : 

python 

try:
    client.connect((server_ip, server_port))
except ConnectionRefusedError:
    print("Erreur de connexion : Connexion refusée")
    exit()

    connect(): Établit une connexion avec le serveur à l'adresse IP et au port spécifiés. 
    Si la connexion est refusée, une exception  ConnectionRefusedError est gérée, affichant un message et terminant le script. 

Saisie de la demande à envoyer au serveur : 

python 

request = input('Hello les Amphormeurs')

    Utilise  input() pour saisir une demande depuis l'utilisateur. 

Envoi de la demande au serveur : 

python 

client.send(request.encode())

    send(): Envoie la demande encodée au serveur. 

Réception de la réponse du serveur : 

python 

response = client.recv(4096)

    recv(): Reçoit la réponse du serveur avec une taille maximale de 4096 octets. 

Affichage de la réponse : 

python 

    print(response.decode())

        Décode et affiche la réponse du serveur. 


